//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "lot")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub valr_id: String,
    pub created_time: String,
    pub lot_price: f64,
    pub price: f64,
    pub quantity: f64,
    pub currency_pair: String,
    pub post_only: bool,
    pub side: String,
    pub customer_order_id: String,
    pub time_in_force: String,
    pub lot_status: String,
    pub profit_total: f64,
    pub amount_of_trades: i32,
    pub batch_id: i32,
    pub fee_currency_zar: f64,
    pub fee_currency_crypto: f64,
    pub trade_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::trade::Entity",
        from = "Column::TradeId",
        to = "super::trade::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Trade,
}

impl Related<super::trade::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Trade.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
